name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'src/**'
      - 'Dockerfile.*'
      - 'backend/Dockerfile*'
      - 'package*.json'
      - 'backend/package*.json'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        include:
          - name: frontend
            dockerfile: Dockerfile.frontend
            context: .
            image: richiesta-assistenza-frontend
          
          - name: backend
            dockerfile: backend/Dockerfile
            context: ./backend
            image: richiesta-assistenza-backend
          
          - name: whatsapp
            dockerfile: backend/Dockerfile.whatsapp
            context: ./backend
            image: richiesta-assistenza-whatsapp

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.image }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.image }}:buildcache,mode=max
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL || 'http://localhost:3200/api' }}
